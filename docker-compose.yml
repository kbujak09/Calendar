services:
  backend:
    build: ./app
    container_name: calendar-backend
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      - ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    volumes:
      - ./app:/app
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build: ./web
    container_name: calendar-frontend
    command: npm run dev -- --host 0.0.0.0 --port 5173 --strictPort
    ports:
      - "5173:5173"
    volumes:
      - ./web:/web
      - /web/node_modules
    working_dir: /web
    tty: true
    stdin_open: true
    depends_on:
      - backend
    restart: unless-stopped

  db:
    image: postgres:16
    container_name: calendar-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

volumes:
  pgdata:
